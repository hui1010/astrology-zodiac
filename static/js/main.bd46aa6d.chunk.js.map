{"version":3,"sources":["redux/result/resultTypes.js","redux/result/resultReducer.js","redux/year/yearTypes.js","redux/year/yearReducer.js","redux/month/monthTypes.js","redux/month/monthReducer.js","redux/day/dayTypes.js","redux/day/dayReducer.js","redux/random/randomTypes.js","redux/random/randomReducer.js","redux/rootReducer.js","redux/store.js","redux/random/randomActions.js","components/InputComponent.js","redux/year/yearActions.js","redux/month/monthActions.js","redux/day/dayActions.js","redux/result/resultActions.js","images/astrology/aquarius.jpg","images/astrology/aries.jpg","images/astrology/cancer.jpg","images/astrology/capricorn.jpg","images/astrology/gemini.jpg","images/astrology/leo.jpg","images/astrology/libra.jpg","images/astrology/pisces.jpg","images/astrology/sagittarius.jpg","images/astrology/scorpio.jpg","images/astrology/taurus.jpg","images/astrology/virgo.jpg","components/Astrology.js","images/zodiac/Monkey.PNG","images/zodiac/Rooster.PNG","images/zodiac/Dog.PNG","images/zodiac/Pig.PNG","images/zodiac/Rat.PNG","images/zodiac/Ox.PNG","images/zodiac/Tiger.PNG","images/zodiac/Rabbit.PNG","images/zodiac/Dragon.PNG","images/zodiac/Snake.PNG","images/zodiac/Horse.PNG","images/zodiac/Goat.PNG","components/Zodiac.js","components/Advice.js","components/OutputComponent.js","App.js","index.js"],"names":["SHOW_RESULT","HIDE_RESULT","initialState","showResult","resultReducer","state","action","type","SAVE_YEAR","year","yearReducer","payload","SAVE_MONTH","month","monthReducer","SAVE_DAY","day","dayReducer","RANDOM","PERSONAL_CODE","random","randomReducer","rootReducer","combineReducers","result","store","createStore","composeWithDevTools","applyMiddleware","thunk","personalCode","InputComponent","dispatch","useDispatch","useState","setYear","setMonth","setDay","handleClick","e","preventDefault","Number","saveYear","saveMonth","saveDay","toast","className","value","onChange","target","handleYearChange","onBlur","val","isInteger","handleYearBlur","required","placeholder","handleMonthChange","handleMonthBlur","handleDayChange","handleDayBlur","onClick","position","autoClose","hideProgressBar","closeOnClick","draggable","pauseOnHover","Astrology","useSelector","dayTwoDigits","String","length","monthDayNumber","astrology","setAstrology","element","setElement","summary","setSummary","image","setImage","useEffect","aquarius","pisces","aries","taurus","gemini","cancer","leo","virgo","libra","scorpio","sagittarius","capricorn","src","alt","href","Zodiac","index","Monkey","Rooster","Dog","Pig","Rat","Ox","Tiger","Rabbit","Dragon","Snake","Horse","Goat","Advice","personalId","personalAdvice","setPersonalAdvice","randomState","randomId","setRandomId","adviceId","axios","get","then","data","content","arr","split","advice","substring","indexOf","lastIndexOf","catch","console","log","Math","round","OutputComponent","fontSize","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd46aa6d.chunk.js","sourcesContent":["export const SHOW_RESULT = 'SHOW_RESULT'\r\nexport const HIDE_RESULT = 'HIDE_RESULT'","import { SHOW_RESULT, HIDE_RESULT } from './resultTypes'\r\n\r\nconst initialState = {\r\n    showResult: false\r\n}\r\n\r\nconst resultReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SHOW_RESULT: return {\r\n            ...state,\r\n            showResult: true\r\n        }\r\n        case HIDE_RESULT: return {\r\n            ...state,\r\n            showResult: false\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default resultReducer","export const SAVE_YEAR = 'SAVE_YEAR'","import {SAVE_YEAR} from './yearTypes'\r\n\r\nconst initialState = {\r\n    year: 0\r\n}\r\n\r\nconst yearReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SAVE_YEAR: return {\r\n            ...state,\r\n            year: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default yearReducer","export const SAVE_MONTH = 'SAVE_MONTH'","import { SAVE_MONTH } from './monthTypes'\r\n\r\nconst initialState = {\r\n    month: 1\r\n}\r\n\r\nconst monthReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SAVE_MONTH: return {\r\n            ...state,\r\n            month: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default monthReducer","export const SAVE_DAY = 'SAVE_DAY'","import { SAVE_DAY } from './dayTypes'\r\n\r\nconst initialState = {\r\n    day: 1\r\n}\r\n\r\nconst dayReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SAVE_DAY: return {\r\n            ...state,\r\n            day: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default dayReducer","export const RANDOM = 'RADOM'\r\nexport const PERSONAL_CODE = 'PERSONAL_CODE'","import { RANDOM, PERSONAL_CODE} from './randomTypes'\r\n\r\nconst initialState = {\r\n    random: false\r\n}\r\n\r\nconst randomReducer = (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case RANDOM: return {\r\n            ...state,\r\n            random: true\r\n        }\r\n        case PERSONAL_CODE: return {\r\n            ...state,\r\n            random: false\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default randomReducer","import { combineReducers } from 'redux'\r\n\r\nimport resultReducer from './result/resultReducer'\r\nimport yearReducer from './year/yearReducer'\r\nimport monthReducer from './month/monthReducer'\r\nimport dayReducer from './day/dayReducer'\r\nimport randomReducer from './random/randomReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    result: resultReducer,\r\n    year: yearReducer,\r\n    month: monthReducer,\r\n    day: dayReducer,\r\n    random: randomReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import { RANDOM, PERSONAL_CODE} from './randomTypes'\r\n\r\nexport const random = () => {\r\n    return {\r\n        type: RANDOM\r\n    }\r\n}\r\n\r\nexport const personalCode = () => {\r\n    return {\r\n        type: PERSONAL_CODE\r\n    }\r\n}","import React,{ useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport { showResult, saveYear, saveMonth, saveDay, personalCode } from '../redux'\r\n\r\nfunction InputComponent() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [year, setYear] = useState()\r\n    const [month, setMonth] = useState()\r\n    const [day, setDay] = useState()\r\n\r\n    const handleYearChange = e => {       \r\n        setYear(e.target.value)\r\n    }\r\n\r\n    const handleMonthChange = e => {\r\n        setMonth(e.target.value)\r\n    }\r\n\r\n    const handleDayChange = e => {\r\n        setDay(e.target.value)\r\n    }\r\n\r\n    const handleYearBlur = e => {\r\n        const val = e.target.value\r\n        if(val) {\r\n            if(val < 0 || !Number.isInteger(Number(val))) {\r\n                toast(\"Please fill in a valid year.\")\r\n            }\r\n        }        \r\n    }\r\n\r\n    const handleMonthBlur = e => {\r\n        const val = e.target.value\r\n        if(val) {\r\n            if(val < 1 || val > 12 || !Number.isInteger(Number(val))) {\r\n                toast(\"Please fill in a valid month.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDayBlur = e => {\r\n        const val = e.target.value\r\n        if(val) {\r\n            if(val < 1 || val > 31 || !Number.isInteger(Number(val))) {\r\n                toast(\"Please fill in a valid day.\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault()\r\n\r\n        if(!(year&&month&&day)){\r\n            toast(\"All the fields need to be filed.\")\r\n            return\r\n        }\r\n\r\n        // if(year < 0 ) {\r\n        //     toast(\"Please fill in a valid year.\")\r\n        //     return\r\n        // }\r\n\r\n        // // if(month > 12 || month < 1) {\r\n        // //     toast(\"Please fill in a vaaaaaaalid month.\")\r\n        // //     return\r\n        // // }\r\n\r\n        // if(day > 31 || day < 1) {\r\n        //     toast(\"Please fill in a valid day.\")\r\n        //     return\r\n        // }\r\n\r\n        dispatch(personalCode())\r\n        dispatch(saveYear(year))\r\n        dispatch(saveMonth(month))\r\n        dispatch(saveDay(day))\r\n        dispatch(showResult())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"input\">\r\n            <p className=\"input-head\">Enter your birthday</p> \r\n            <form className=\"input-form\"> \r\n                <div className=\"input-data\">\r\n                    <label> Year </label>\r\n                    <input type=\"number\" value={year} onChange={e => handleYearChange(e)} onBlur={e=>handleYearBlur(e)} required placeholder=\"yyyy\"/>\r\n                </div>          \r\n                <div className=\"input-data\">\r\n                    <label>Month </label>\r\n                    <input type=\"number\" value={month} onChange={e => handleMonthChange(e)} onBlur={e=>handleMonthBlur(e)} required placeholder=\"m/mm\"/>\r\n                </div>      \r\n                <div className=\"input-data\">\r\n                    <label> Day </label>\r\n                    <input type=\"number\" value={day} onChange={e => handleDayChange(e)} onBlur={e=>handleDayBlur(e)} required placeholder=\"d/dd\"/> \r\n                </div>                 \r\n                <div className=\"input-data\">\r\n                    <button className=\"button-submit\" onClick={e => handleClick(e)}>Go</button>           \r\n                </div>    \r\n            </form>\r\n            <ToastContainer position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                closeOnClick\r\n                draggable\r\n                pauseOnHover/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputComponent\r\n","import {SAVE_YEAR} from './yearTypes'\r\n\r\nexport const saveYear = year => {\r\n    return {\r\n        type: SAVE_YEAR,\r\n        payload: Number(year)\r\n    }\r\n}","import { SAVE_MONTH } from './monthTypes'\r\n\r\nexport const saveMonth = month => {\r\n    return {\r\n        type: SAVE_MONTH,\r\n        payload: Number(month)\r\n    }\r\n}","import { SAVE_DAY } from './dayTypes'\r\n\r\nexport const saveDay = day => {\r\n    return {\r\n        type: SAVE_DAY,\r\n        payload: Number(day)\r\n    }\r\n}","import { SHOW_RESULT, HIDE_RESULT } from './resultTypes'\r\n\r\nexport const showResult = () => {\r\n    return {\r\n        type: SHOW_RESULT\r\n    }\r\n}\r\n\r\nexport const hideResult = () => {\r\n    return {\r\n        type: HIDE_RESULT\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/aquarius.331cd93b.jpg\";","export default __webpack_public_path__ + \"static/media/aries.02ec7229.jpg\";","export default __webpack_public_path__ + \"static/media/cancer.8fd69c16.jpg\";","export default __webpack_public_path__ + \"static/media/capricorn.49f9a6e3.jpg\";","export default __webpack_public_path__ + \"static/media/gemini.e6fb1110.jpg\";","export default __webpack_public_path__ + \"static/media/leo.4cf6dcb0.jpg\";","export default __webpack_public_path__ + \"static/media/libra.0d569ebd.jpg\";","export default __webpack_public_path__ + \"static/media/pisces.bb738b1f.jpg\";","export default __webpack_public_path__ + \"static/media/sagittarius.b76e98d8.jpg\";","export default __webpack_public_path__ + \"static/media/scorpio.3a745dec.jpg\";","export default __webpack_public_path__ + \"static/media/taurus.7cff4cf3.jpg\";","export default __webpack_public_path__ + \"static/media/virgo.f233f058.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport aquarius from '../images/astrology/aquarius.jpg'\r\nimport aries from '../images/astrology/aries.jpg'\r\nimport cancer from '../images/astrology/cancer.jpg'\r\nimport capricorn from '../images/astrology/capricorn.jpg'\r\nimport gemini from '../images/astrology/gemini.jpg'\r\nimport leo from '../images/astrology/leo.jpg'\r\nimport libra from '../images/astrology/libra.jpg'\r\nimport pisces from '../images/astrology/pisces.jpg'\r\nimport sagittarius from '../images/astrology/sagittarius.jpg'\r\nimport scorpio from '../images/astrology/scorpio.jpg'\r\nimport taurus from '../images/astrology/taurus.jpg'\r\nimport virgo from '../images/astrology/virgo.jpg'\r\n\r\n\r\nfunction Astrology() {\r\n\r\n    const month = useSelector(state=>state.month.month)\r\n    const day = useSelector(state=>state.day.day)\r\n\r\n    const dayTwoDigits = String(day).length > 1 ? String(day) :  0 + String(day)\r\n    const monthDayNumber = Number(month + dayTwoDigits)     \r\n\r\n    const [astrology, setAstrology] = useState('')\r\n    const [element, setElement] = useState('')\r\n    const [summary, setSummary] = useState('')\r\n    const [image, setImage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (monthDayNumber >= 101 && monthDayNumber <= 1231) {\r\n            if (monthDayNumber >= 120 && monthDayNumber <= 218) {\r\n                setAstrology('Aquarius (Water bearer)')\r\n                setElement('Air')\r\n                setImage(aquarius)\r\n                setSummary('Aquarius people are original, idealistic, rebellious, independent, inventors, open minded and honest.')\r\n            } else if (monthDayNumber >= 219 && monthDayNumber <= 320) {\r\n                setAstrology('Pisces (Fish)')\r\n                setElement('Water')\r\n                setImage(pisces)\r\n                setSummary('Pisceans are dreamy, erratic, creative, romantic, compassionate, elusive, imaginative, sensitive and kind people.')\r\n            } else if (monthDayNumber >= 321 && monthDayNumber <= 419) {\r\n                setAstrology('Aries (Ram)')\r\n                setElement('Fire')\r\n                setImage(aries)\r\n                setSummary('The Aries people are willful, feisty, self-centered, courageous, bold, foolhardy, independent and straightforward.')\r\n            } else if (monthDayNumber >= 420 && monthDayNumber <= 520) {\r\n                setAstrology('Taurus (Bull)')\r\n                setElement('Earth')\r\n                setImage(taurus)\r\n                setSummary('The Taurus people are practical, creative, loyal, possessive, temperamental, sensually indulgent, down-to-earth, dependable, persistent and practical.')\r\n            } else if (monthDayNumber >= 521 && monthDayNumber <= 621) {\r\n                setAstrology('Gemini (Twins)')\r\n                setElement('Air')\r\n                setImage(gemini)\r\n                setSummary('The Gemini people are curious, elusive, unpredictable, changeable, versatile, childlike, romantic, playful, friendly, talkative and have a keen intellect.')\r\n            } else if (monthDayNumber >= 622 && monthDayNumber <= 722) {\r\n                setAstrology('Cancer (Crab)')\r\n                setElement('Water')\r\n                setImage(cancer)\r\n                setSummary('The Cancer people are cautious, protective, nurturing, secretive, instinctive, needy, sensitive, funny, empathetic and deeply complex people.')\r\n            } else if (monthDayNumber >=723 && monthDayNumber <= 822) {\r\n                setAstrology('Leo (Lion)')\r\n                setElement('Fire')\r\n                setImage(leo)\r\n                setSummary('The Leos are distinctive, provocative, demanding, goal-oriented, flamboyant, self-made, warm, outgoing, sincere and loyal people.')\r\n            } else if (monthDayNumber >= 823 && monthDayNumber <= 922) {\r\n                setAstrology('Virgo (Virgin)')\r\n                setElement('Earth')\r\n                setImage(virgo)\r\n                setSummary('The Virgos are obsessive, realistic, analytical, reliable, self-contained, knowledgeable, predictable, street-smart, detailed and modest people.')\r\n            } else if (monthDayNumber >= 923 && monthDayNumber <= 1023) {\r\n                setAstrology('Libra (Balance)')\r\n                setElement('Air')\r\n                setImage(libra)\r\n                setSummary('Librans are harmonious, civilized, intellectual, sophisticated, seductive, elegant, creative, witty, balanced, sociable and people who maintain their status quo.')\r\n            } else if (monthDayNumber >= 1024 && monthDayNumber <= 1121) {\r\n                setAstrology('Scorpio (Scorpion)')\r\n                setElement('Water')\r\n                setImage(scorpio)\r\n                setSummary('The Scorpio people are intense, magnetic, erotic, challenging, secretive, powerful, broody, passionate, immovable and penetrating.')\r\n            } else if (monthDayNumber >= 1122 && monthDayNumber <= 1221) {\r\n                setAstrology('Sagittarius (Archer)')\r\n                setElement('Fire')\r\n                setImage(sagittarius)\r\n                setSummary('The Sagittarius are adventurous, hilarious, extrovert, romantics, spirited, unstoppable, generous, happy and open-minded.')\r\n            } else {\r\n                setAstrology('Capricorn (Goat)')\r\n                setElement('Earth')\r\n                setImage(capricorn)\r\n                setSummary('The Capricorn people are organized, respectful, devoted, classy, materialistic, serious, staid, ambitious and practical.')\r\n            }                 \r\n        } else {\r\n            setAstrology(\"Please make sure you fill in valid date.\")\r\n        }\r\n    }, [monthDayNumber])\r\n\r\n    return (\r\n        <div  className=\"output-content-inner astrology\">\r\n            <p>Your astrology is <strong className=\"result astrology-result\">{astrology}</strong> </p>\r\n            <p>Your element is <strong className=\"result astrology-result\">{element}</strong> </p>\r\n            <img className=\"astrology-img\" src={image} alt=\"\"/>\r\n            <p className=\"astrology-summary\">{summary}</p>\r\n            <div className=\"info\">\r\n            <p>Information from <a className=\"info-link\" href=\"https://astrologybay.com/zodiac-characteristics\">AstrologyBay</a></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Astrology\r\n","export default __webpack_public_path__ + \"static/media/Monkey.ec66c743.PNG\";","export default __webpack_public_path__ + \"static/media/Rooster.d7ec2c51.PNG\";","export default __webpack_public_path__ + \"static/media/Dog.59b27874.PNG\";","export default __webpack_public_path__ + \"static/media/Pig.42573bbf.PNG\";","export default __webpack_public_path__ + \"static/media/Rat.19020a74.PNG\";","export default __webpack_public_path__ + \"static/media/Ox.b42fe53f.PNG\";","export default __webpack_public_path__ + \"static/media/Tiger.8a00da2d.PNG\";","export default __webpack_public_path__ + \"static/media/Rabbit.847f83d5.PNG\";","export default __webpack_public_path__ + \"static/media/Dragon.565a69f6.PNG\";","export default __webpack_public_path__ + \"static/media/Snake.6b6d7e12.PNG\";","export default __webpack_public_path__ + \"static/media/Horse.cf141202.PNG\";","export default __webpack_public_path__ + \"static/media/Goat.4b957a79.PNG\";","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Monkey from '../images/zodiac/Monkey.PNG'\r\nimport Rooster from '../images/zodiac/Rooster.PNG'\r\nimport Dog from '../images/zodiac/Dog.PNG'\r\nimport Pig from '../images/zodiac/Pig.PNG'\r\nimport Rat from '../images/zodiac/Rat.PNG'\r\nimport Ox from '../images/zodiac/Ox.PNG'\r\nimport Tiger from '../images/zodiac/Tiger.PNG'\r\nimport Rabbit from '../images/zodiac/Rabbit.PNG'\r\nimport Dragon from '../images/zodiac/Dragon.PNG'\r\nimport Snake from '../images/zodiac/Snake.PNG'\r\nimport Horse from '../images/zodiac/Horse.PNG'\r\nimport Goat from '../images/zodiac/Goat.PNG'\r\n\r\n\r\nfunction Zodiac() {\r\n\r\n    const year = useSelector(state => state.year.year)\r\n    const animals = ['Monkey', 'Rooster', 'Dog', 'Pig', 'Rat',' Ox', 'Tiger', 'Rabbit', 'Dragon', 'Snake', 'Horse', 'Goat']\r\n    const animalsChinese = ['猴', '鸡', '狗', '猪', '鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊']\r\n    const personalities = [\r\n        \"Entertaining, intelligent, optimistic, sociable, fickle, secretive, unpredictable\",\r\n        \"Adventurous, charitable, funny, loyal, argumentative, boastful, self-involved\",\r\n        \"Helpful, honest, trustworthy, unselfish, pessimistic, anxious, timid\",\r\n        \"Caring, generous, smart, outgoing, fearful, impatient, materialistic\",\r\n        \"Ambitious, charming, talkative, resourceful, private, frugal, critical\",\r\n        \"Diligent, gentle, hardworking, reliable, patient, materialistic, stubborn\",\r\n        \"Confident, brave, magnetic, idealistic, thrill-seeking, arrogant, selfish\",\r\n        \"Kind, sensitive, artistic, romantic, judgmental, timid, refined\",\r\n        \"Outspoken, energetic, generous, intelligent, perfectionistic, egocentric, impatient\",\r\n        \"Clever, curious, alluring, wise, anxious, calculating, jealous\",\r\n        \"Amusing, enthusiastic, independent, persuasive, irresponsible, moody, opportunistic\",\r\n        \"Easygoing, empathetic, creative, cheerful, disorganized, impulsive lazy\"\r\n    ]\r\n    const index = year%12\r\n\r\n    const [image, setImage] = useState()\r\n    useEffect(() => {\r\n        switch(index) {\r\n            case 0: setImage(Monkey)\r\n                    break\r\n            case 1: setImage(Rooster)\r\n                    break\r\n            case 2: setImage(Dog)\r\n                    break\r\n            case 3: setImage(Pig)\r\n                    break\r\n            case 4: setImage(Rat)\r\n                    break\r\n            case 5: setImage(Ox) \r\n                    break\r\n            case 6: setImage(Tiger)\r\n                    break\r\n            case 7: setImage(Rabbit)\r\n                    break\r\n            case 8: setImage(Dragon)\r\n                    break   \r\n            case 9: setImage(Snake)\r\n                    break\r\n            case 10: setImage(Horse)\r\n                    break\r\n            case 11: setImage(Goat)\r\n                    break\r\n            default: setImage()\r\n                    break\r\n        }\r\n    }, [index])\r\n    \r\n    return (\r\n        <div className=\"output-content-inner zodiac\">\r\n            <p>Your Chinese Zodiac is <strong className=\"result zodiac-result\">{animals[index]}</strong></p>\r\n            <div className=\"img-char\">\r\n                <div className=\"img-char-inner\">\r\n                    <div className=\"front\">\r\n                        <img src={image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"back\">\r\n                        <p className=\"char\">{animalsChinese[index]}</p>\r\n                        <p className=\"personality\"> <strong>Personality traits: </strong> {personalities[index]}</p>\r\n                    </div>               \r\n                </div>\r\n            </div>         \r\n            <div className=\"placeholder\"></div>  \r\n            <div className=\"info\">\r\n            <p>Personality from <a className=\"info-link\" href=\"https://www.oprahdaily.com/life/a35119928/chinese-zodiac-signs/\">Oprah Daily</a></p>\r\n            <p>Paintings by <a className=\"info-link\" href=\"https://baike.baidu.com/item/%E6%9D%8E%E5%B0%A4%E4%BF%8A#reference-[1]-3321755-wrap\"> Li Youjun 李尤俊</a></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Zodiac\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport { random, personalCode } from '../redux'\r\n\r\nfunction Advice() {\r\n\r\n    const year = useSelector(state => state.year.year)\r\n    const month = useSelector(state => state.month.month)\r\n    const day = useSelector(state => state.day.day)\r\n    const personalId = year%100 + month + day\r\n    const [personalAdvice, setPersonalAdvice] = useState('')\r\n\r\n    const randomState = useSelector(state=>state.random.random)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [randomId, setRandomId] = useState(1)\r\n    let adviceId = randomState? randomId :personalId\r\n    \r\n    const handleRandomClick = () => {\r\n        dispatch(random())\r\n        setRandomId(Math.round(Math.random()*100)+1)\r\n    }\r\n\r\n    const handlePersonalClick = () => {\r\n        dispatch(personalCode())\r\n    }\r\n    \r\n        \r\n    useEffect(() => {\r\n        axios.get(`https://api.adviceslip.com/advice/${adviceId}`)\r\n        .then(data => {\r\n            const content = data.data\r\n            const arr = content?.split('\"advice\"')\r\n            const advice = arr[1].substring(arr[1].indexOf('\"') + 1, arr[1].lastIndexOf('\"'))\r\n            setPersonalAdvice(advice)})\r\n        .catch(e=>console.log(e))\r\n    }, [adviceId])\r\n   \r\n\r\n    \r\n    return (\r\n        <div className=\"output-content-inner advice\">\r\n            <p>Your {randomState? `random` : `personal`} advice based on your birthday is</p>           \r\n            <p className=\"result advice-result\">{personalAdvice}</p>        \r\n            <button className=\"advice-button advice-random\" onClick={handleRandomClick}>Try a random one</button>\r\n            <button className=\"advice-button advice-personal\" onClick={handlePersonalClick}>Get my personal one</button>\r\n            <div className=\"info\">\r\n            <p>Advice from <a className=\"info-link\" href=\"https://api.adviceslip.com/\">Advice Slip JSON API</a></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Advice\r\n","import React from 'react'\r\nimport { MdClose } from 'react-icons/md'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { hideResult } from '../redux'\r\nimport Astrology from './Astrology'\r\nimport Zodiac from './Zodiac'\r\nimport Advice from './Advice'\r\n\r\nfunction OutputComponent() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(hideResult())\r\n    }\r\n\r\n    return (\r\n        <div className=\"output\">\r\n            <button className=\"close\" onClick={handleClick}>\r\n                <MdClose fontSize={20}/>\r\n            </button>\r\n            <div className=\"output-content\">\r\n                <Astrology />\r\n                <Zodiac />\r\n                <Advice />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutputComponent\r\n","import {useSelector} from 'react-redux'\nimport './App.css';\n\nimport InputComponent from './components/InputComponent'\nimport OutputComponent from './components/OutputComponent'\n\n\nfunction App() {\n\n  const showResult = useSelector(state => state.result.showResult)\n\n\n\n\n  return (\n \n      <div className=\"App\">\n        <InputComponent />\n        {showResult && <OutputComponent />}\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}